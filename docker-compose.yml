version: "3.9"
services:
  ###
  ### SERVICES
  ###

  hasura-engine:
    image: hasura/graphql-engine:v2.8.0
    ports:
      - "8080:8080"
    environment:
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_ADMIN_SECRET:-hasura}"
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256", "key": "${HASURA_JWT_SECRET:-h2leOvdgjwpV0As5L8rZlV3VDVOsOmwk}"}'
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD:-postgres}@hasura-db:5432/postgres
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
    restart: unless-stopped
    depends_on:
      hasura-db:
        condition: service_healthy
    healthcheck:
      test: timeout 1s bash -c ':> /dev/tcp/127.0.0.1/8080' || exit 1
      interval: 2s
      timeout: 1s
      retries: 10

  hasura-db:
    image: postgres:14
    ports:
      - "${HASURA_DB_PORT:-5432}:5432"
    volumes:
      - .docker-data/hasura-db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 1s
      retries: 20

  ###
  ### UTILITIES
  ###

  adminer:
    image: adminer:4.8.1
    links:
      - hasura-db:postgres
      - hasura-db:db
    ports:
      - "${ADMINER_PORT:-8008}:8080"
    restart: unless-stopped
    depends_on:
      hasura-db:
        condition: service_healthy
